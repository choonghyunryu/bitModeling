% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predefined_model.R
\name{get_training}
\alias{get_training}
\title{Fit Binary Classification}
\usage{
get_training(
  x,
  classifiers = c("logistic", "lasso", "elastic", "ridge", "ranger", "xgboost"),
  n_fold = 10L,
  n_grid = 30L,
  n_best = 10L,
  n_trees = ifelse(classifiers \%in\% "ranger", 500L, 500L),
  best_metric = c("f_meas", "recall", "sensitivity", "precision", "specificity",
    "accuracy", "bal_accuracy", "detection_prevalence", "f_meas_05", "f_meas_2",
    "j_index", "kap", "mcc", "npv", "ppv", "gmean"),
  verbose = TRUE
)
}
\arguments{
\item{x}{recipe. 모델을 정의한 recipe 객체.}

\item{classifiers}{character. Binary classification 모델의 classifier. 
c("logistic", "lasso", "elastic", "ridge", "ranger", "xgboost")에서 선택.}

\item{n_fold}{integer. Cross-Validation을 수행한 n-Folds의 값. 기본값은 10.}

\item{n_grid}{integer. Hyper Parameters를 수행할 Grid의 개수. 기본값은 30.}

\item{n_best}{integer. Best 모델의 목록을 계산할 목록의 개수. 기본값은 10.}

\item{n_trees}{integer. model이 "ranger"나 "xgboost"일 경우에만 사용하는 인수.
모델에서 생성할 개별 트리의 개수를 지정함. 기본값은 "ranger"는 500개, "xgboost"는 500개임.}

\item{best_metric}{character. Best 모델을 선정할 때 사용하는 성능지표. 
c("f_meas", "recall", "sensitivity", "precision", "specificity", "accuracy", 
"bal_accuracy", "detection_prevalence", "f_meas_05", "f_meas_2", "j_index", 
"kap", "mcc", "npv", "ppv", "gmean") 중에서 선택함. 기본값은 "f_meas"}

\item{verbose}{logical. 작업 경과의 정보를 출력할지의 여부, 기본값은 TRUE.}
}
\value{
workflow 클래스 객체.
반환하는 workflow 객체는 다음과 같은 attributes를 갖음.
\itemize{
\item coef_term tbl_df. 모델을 정의한 terms의 추정 계수값 등의 정보. 
\item pred tbl_df. 모델에 test 셋을 적용해서 예측한 예측값 정보. 
\item cmat conf_mat. 모델의 성능 측정을 위한 confusion matrix.
\item metrics tbl_df. 모델의 성능 측정 메트릭 정보.
}
}
\description{
recipe 클래스와 정의된 classifiers를 이용하여 Binary Classification을 적합함
}
\examples{
\donttest{
# 모델 개발을 위한 recipe 정의
data_recipe <- dlookr::heartfailure \%>\% 
  target_to(death_event) \%>\% 
  set_positive("Yes") \%>\% 
  split_dataset(prop = 0.7) \%>\% 
  extract_dataset() \%>\% 
  set_formula() \%>\% 
  step_my_center() \%>\% 
  step_my_dummy() \%>\% 
  step_my_rose()

# 정의한 recipe로 "logistic" 모델 빌드
my_model <- get_training(data_recipe)

my_model

# 정의한 recipe로 "xgboost" 모델 빌드
my_model <- get_training(data_recipe, classifiers = "xgboost")
}

}
